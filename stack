#!/bin/bash

#set -ex

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

DEPLOYMENT_DIR=${SCRIPT_DIR}/deployments

usage() {
    printf "Usage:\n"
    printf "  help\t\tShow this help\n"
    printf "\n"
    printf "  expose\tExpose the service. Port defaults to 6379 if not specified\n"
    printf "\n"
    printf "  logs\t\tSee logs\n"
    printf "\n"
    printf "  rcli\t\tConnect to the database\n"
    printf "\n"
    printf "  pvc\t\tDeploy PVC\n"
    printf "\n"
    printf "  up | down\tDeploy or destroy the service \n"
    printf "\n"
}

connect() {
    kubectl exec redis-0 -it -- sh -c "redis-cli"
}

deploy_pvc() {
    kubectl apply -f ${DEPLOYMENT_DIR}/pvc.yaml
}

deploy_or_destroy_db() {
    local action="$1"

    [[ -z "$action" ]] && printf "Error: action (e.g. up, down) can't be empty.\n" && exit 1

    if [[ "$action" == "up" ]]; then
        kubectl apply -f ${DEPLOYMENT_DIR}/cache.yaml
    elif [[ "$action" == "down" ]]; then
        kubectl delete -f ${DEPLOYMENT_DIR}/cache.yaml
    fi
    kubectl get pods
}

expose(){
    local port="${1-:6379}"

    kubectl port-forward statefulset/redis ${port}:6379
}

log() {
    kubectl logs -f redis-0
}

case "$1" in
    expose)
        expose "${@:2}"
        ;;
    logs)
        log
        ;;
    rcli)
        connect "${@:2}"
        ;;
    pvc)
        deploy_pvc "${@:2}"
        ;;
    up | down)
        deploy_or_destroy_db "${@:1}"
        ;;
    * | -h | help)
        usage
        ;;
esac